name: Test & Publish ðŸ“¦ to PyPI

on: [push]

env:
  AWS_DEFAULT_REGION: ap-southeast-2

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"

    env:
      UV_PYTHON: ${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v5

      - name: Get uv version
        run: |
          UV_VERSION=$(grep "^uv " ".tool-versions" | cut -d' ' -f2)
          echo "UV_VERSION=$UV_VERSION" >> "$GITHUB_ENV"

      - name: Set up Python ${{ matrix.python-version }}
        uses: astral-sh/setup-uv@v7
        with:
          version: ${{ env.UV_VERSION }}

      - name: Check python version
        run: uv run python --version

      - name: Install dependencies
        run: uv sync

      - name: Run lint
        run: make lint

      - name: Run tests
        run: make test

  publish:
    needs: test
    runs-on: ubuntu-latest
    env:
      UV_PYTHON: "3.13"

    steps:
      - uses: actions/checkout@v5

      - name: Get uv version
        run: |
          UV_VERSION=$(grep "^uv " ".tool-versions" | cut -d' ' -f2)
          echo "UV_VERSION=$UV_VERSION" >> "$GITHUB_ENV"

      - name: Set up Python ${{ matrix.python-version }}
        uses: astral-sh/setup-uv@v7
        with:
          version: ${{ env.UV_VERSION }}

      - name: Check python version
        run: uv run python --version

      - name: Install dependencies
        run: uv sync --no-dev --group build

      - name: Build a binary wheel and a source tarball
        run: uv run python -m build --sdist --wheel --outdir dist/ .

      - name: Publish distribution ðŸ“¦ to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
